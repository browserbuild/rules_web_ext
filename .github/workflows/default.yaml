name: CI
on:
  push:
    branches:
      - master
  pull_request: {}
jobs:
  build:
    name: ${{ matrix.os }} bazel ${{ matrix.bazel-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        bazel-version: [3.6.0, 3.7.2, 4.0.0]
        include:
          # ubuntu-latest
          - os: ubuntu-latest
            bazel-cache: ~/.cache/bazel

          # macos-latest
          - os: macos-latest
            bazel-cache: /var/tmp/_bazel_runner/cache

          # windows-latest
          - os: windows-latest
            bazel-cache: |
              "C:\users\runneradmin\_bazel_runneradmin\cache"
    env:
      USE_BAZEL_VERSION: ${{ matrix.bazel-version }}
    steps:
      - uses: actions/checkout@v2

      # ubuntu-latest + macos-latest
      - name: Setup bazel (Unix)
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
        run: |
          bazel info

      # windows-latest
      - name: Setup MSYS2 (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        uses: msys2/setup-msys2@v2
        with:
          install: zip unzip patch diffutils
      - name: Setup bazel (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          mkdir %APPDATA%\bin
          Invoke-WebRequest "https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-windows-amd64.exe" -OutFile "%APPDATA%\bin\bazel.exe"
          set "PATH=%PATH%;%APPDATA%\bin"
          echo "BAZEL_SH=C:\msys64\usr\bin\bash.exe" | Out-File -FilePath $Env:GITHUB_ENV -Append
          fsutil 8dot3name set 0
          bazel info

      - name: Mount bazel cache
        uses: actions/cache@v1
        with:
          path: ${{ matrix.bazel-cache }}
          key: ${{ runner.os }}-bazel-${{ matrix.bazel-version }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-bazel-${{ matrix.bazel-version }}-
            ${{ runner.os }}-bazel-
      - name: Run bazel @nodejs//:yarn
        run: bazel run @nodejs//:yarn
      - name: Run bazel check
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
        run: yarn run bazel:format-check && yarn run bazel:lint
      - name: Run bazel build
        run: bazel build //... --announce_rc --noshow_progress --verbose_failures --local_ram_resources=7000

      # ubuntu-latest + macos-latest
      - name: Run bazel test
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
        run: bazel test //... --announce_rc --noshow_progress --verbose_failures --local_ram_resources=7000 --test_output=all
